services:
  app:
    container_name: "app"
    build: .
    environment:
      SETTINGS: deploy/backend
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy

  database:
    container_name: "database"
    image: postgres:15-alpine3.18
    env_file:
      - ./deploy/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      db_net:
        aliases:
          - database

  migrate:
    container_name: "migrate"
    image: "migrate/migrate:latest"
    networks:
      - db_net
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./${MIGRATIONS_ROOT}:/migrations
    command:
      ["-path", "/migrations", "-database",  "${POSTGRES_DSN}", "up"]
    links:
      - database
  

volumes:
  db:
    driver: local

networks:
  db_net: